{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/contacts.js","components/App.js","index.js"],"names":["Persons","persons","filter","deleteContact","person","name","toLowerCase","search","map","key","number","onClick","id","PersonForm","personHandler","nameHandler","numberHandler","nameRef","numberRef","onSubmit","ref","placeholder","onChange","type","Filter","filterHandler","Notification","message","notificationStyle","error","color","backgroundColor","padding","marginBottom","border","borderRadius","maxWidth","fontSize","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","errorMessage","setErrorMessage","useEffect","contactService","resetForm","value","isPresented","phoneObject","presentedId","presentedPerson","some","console","log","window","confirm","setTimeout","catch","e","target","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81c3de78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Persons = ({ persons, filter, deleteContact }) => {\r\n  return (\r\n    <>\r\n      {persons\r\n        .filter(person => {\r\n          if (filter === '') return person;\r\n          return person.name.toLowerCase().search(filter.toLowerCase()) !== -1;\r\n        })\r\n        .map(person => (\r\n          <p key={person.name}>\r\n            {person.name} {person.number}{' '}\r\n            <button onClick={() => deleteContact(person.id)}>delete</button>\r\n          </p>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({personHandler, nameHandler, numberHandler, nameRef, numberRef}) => {\r\n  return (\r\n    <form onSubmit={personHandler}>\r\n    <div>\r\n      name:{' '}\r\n      <input\r\n        ref={nameRef}\r\n        placeholder='your name'\r\n        onChange={nameHandler}\r\n      />\r\n    </div>\r\n    <div>\r\n      number:{' '}\r\n      <input\r\n        ref={numberRef}\r\n        placeholder='your number'\r\n        onChange={numberHandler}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type='submit'>add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Filter = ({filterHandler}) => {\r\n  return (\r\n    <div>\r\n      filter shown with:{' '}\r\n      <input placeholder='find a person' onChange={filterHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message, error }) => {\r\n  const notificationStyle = !error ? {\r\n    color: 'green',\r\n    backgroundColor: 'lightgrey',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    border: '2px solid green',\r\n    borderRadius: '3px',\r\n    maxWidth: '500px',\r\n    fontSize: 16\r\n  } : {\r\n    color: 'red',\r\n    backgroundColor: 'lightgrey',\r\n    padding: '10px',\r\n    marginBottom: '20px',\r\n    border: '2px solid red',\r\n    borderRadius: '3px',\r\n    maxWidth: '500px',\r\n    fontSize: 16\r\n  }\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deleteContact,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Persons from './Persons';\r\nimport PersonForm from './PersonForm';\r\nimport Filter from './Filter';\r\nimport Notification from './Notification';\r\nimport contactService from '../services/contacts';\r\n\r\nconst App = () => {\r\n  let nameRef = {},\r\n    numberRef = {};\r\n\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n  const [notification, setNotification] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const addNameHandler = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const addNumberHandler = e => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const filterHandler = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    let confirm = window.confirm('Are you sure you want to delete a contact?');\r\n    if (confirm)\r\n      contactService.deleteContact(id).then(() => {\r\n        return contactService.getAll().then(persons => setPersons(persons));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    contactService.getAll().then(persons => setPersons(persons));\r\n  }, []);\r\n\r\n  const addPersonHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const phoneObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    isPresented(phoneObject);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    nameRef.value = '';\r\n    numberRef.value = '';\r\n    setNewName('');\r\n    setNewNumber('');\r\n  };\r\n\r\n  const isPresented = phoneObject => {\r\n    let presentedId = -1;\r\n    let presentedPerson = {};\r\n    let isPresented = persons.some(person => {\r\n      if (person.name.toLowerCase() === newName.toLowerCase()) {\r\n        presentedPerson = person;\r\n        presentedId = person.id;\r\n        console.log(presentedId, 'presentedId');\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (isPresented) {\r\n      let updateContact = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one?`\r\n      );\r\n      if (updateContact) {\r\n        contactService\r\n          .update(presentedId, { ...presentedPerson, number: newNumber })\r\n          .then(() => {\r\n            resetForm();\r\n            contactService.getAll().then(persons => setPersons(persons));\r\n          })\r\n          .then(() => {\r\n            setNotification(`Contact ${presentedPerson.name} has been updated`);\r\n            setTimeout(() => {\r\n              setNotification(null);\r\n            }, 3000);\r\n          })\r\n          .catch(e => {\r\n            setErrorMessage(\r\n              `Information of ${presentedPerson.name} has already been removed from server`\r\n            );\r\n            contactService.getAll().then(persons => setPersons(persons));\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 3000);\r\n          });\r\n      }\r\n    } else {\r\n      contactService\r\n        .create(phoneObject)\r\n        .then(() => {\r\n          resetForm();\r\n          contactService.getAll().then(persons => setPersons(persons));\r\n        })\r\n        .then(() => {\r\n          setNotification(`Contact ${phoneObject.name} has been created`);\r\n          setTimeout(() => {\r\n            setNotification(null);\r\n          }, 3000);\r\n        })\r\n        .catch(e => {\r\n          setErrorMessage(e.response.data.error);\r\n          contactService.getAll().then(persons => setPersons(persons));\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 3000);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter filterHandler={filterHandler} />\r\n      <h2>Add a new</h2>\r\n      <Notification message={notification} error={false} />\r\n      <Notification message={errorMessage} error={true} />\r\n      <PersonForm\r\n        personHandler={addPersonHandler}\r\n        nameHandler={addNameHandler}\r\n        numberHandler={addNumberHandler}\r\n        nameRef={ref => (nameRef = ref)}\r\n        numberRef={ref => (numberRef = ref)}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filter={filter}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}